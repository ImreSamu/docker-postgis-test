# .circleci/config.yml

# Circle CI arm64 builder
version: 2.1

orbs:
  # https://circleci.com/developer/orbs/orb/circleci/docker
  docker: circleci/docker@2.8.1
  # https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@3.0.0
  # https://circleci.com/developer/orbs/orb/circleci/shellcheck
  shellcheck: circleci/shellcheck@3.2.0

jobs:
  build-arm64:
    # We limit this to prevent overloading external servers (e.g., OSGeo, PROJ).
    # Note: Include parallel GitHub CI jobs when calculating the total load, as they run simultaneously!
    parallelism: 8
    machine:
      image: ubuntu-2404:current
    resource_class: arm.large
    environment:
      BUILDX_PLATFORMS: linux/arm64v8
      DOCKER_BUILDKIT: '1'
      PLATFORM: linux/arm64v8
    parameters:
      target-version-variant:
        type: string
    steps:
      - checkout

      - run:
          name: Display pipeline.* values
          command: |
            echo 'pipeline.git.branch: <<pipeline.git.branch>>'
            echo 'pipeline.git.revision: <<pipeline.git.revision>>'
            echo 'pipeline.id: <<pipeline.id>>'
            echo 'pipeline.project.git_url: <<pipeline.project.git_url>>'
            echo 'pipeline.trigger_source: <<pipeline.trigger_source>>'
            echo 'pipeline.schedule.name:<< pipeline.schedule.name >>'
            echo 'pipeline.schedule.id:<< pipeline.schedule.id >>'

      - docker/check:
          registry: docker.io
          docker-username: DOCKERHUB_USERNAME
          docker-password: DOCKERHUB_ACCESS_TOKEN

      - run:
          name: Docker Ratelimit Check - before
          # https://docs.docker.com/docker-hub/download-rate-limit/
          command: |
            TOKEN=$(curl --user "$DOCKERHUB_USERNAME:$DOCKERHUB_ACCESS_TOKEN" "https://auth.docker.io/token?service=registry.docker.io&scope=repository:ratelimitpreview/test:pull" | jq -r .token)
            HEADERS=$(curl --head -H "Authorization: Bearer $TOKEN" https://registry-1.docker.io/v2/ratelimitpreview/test/manifests/latest)
            echo "Rate Limit Info:"
            echo "$HEADERS" | grep ratelimit

      - run: uname -a
      - run: docker --version
      - run: docker info
      - run: pip3 install --upgrade pip
      - run: pip3 install --upgrade lastversion check-jsonschema
      - run: tools/install_manifest-tool.sh
      - run: tools/install_dive.sh
      - run: tools/environment_init.sh
      - run: make check_version

      - run:
          name: Conditional Docker Check - Halt if not on master branch or if it's a PR or Weekly image exists
          command: |
            # Check if the current branch is 'master' and the weekly image is not extis
            #    If weekly image exists, skip docker build and push
            source tools/environment_init.sh
            echo "check: << parameters.target-version-variant >>${IMAGE_VERSION_ID}"
            check_image_exists "<< parameters.target-version-variant >>${IMAGE_VERSION_ID}" || true
            if [ "$CIRCLE_BRANCH" == "master" ] && check_image_exists "<< parameters.target-version-variant >>${IMAGE_VERSION_ID}"; then
              circleci-agent step halt
            fi

      - run: make -n test-<< parameters.target-version-variant >>
      - run: make test-<< parameters.target-version-variant >>
      - run: make scan-<< parameters.target-version-variant >> || true
      - run: make dive-<< parameters.target-version-variant >> || true
      - run: docker images

      - run:
          name: Conditional Docker Check - Halt if not on master branch or if it's a PR
          command: |
            # Check if the current branch is NOT 'master' or if the build is triggered by a pull request.
            # If either of these conditions is met, halt the workflow.
            if [ "$CIRCLE_BRANCH" != "master" ] || [ -n "$CIRCLE_PULL_REQUEST" ]; then
              circleci-agent step halt
            fi

      - run:
          name: "Push docker image : make push-<< parameters.target-version-variant >>"
          command: |
            if [ "$CIRCLE_BRANCH" == "master" ] && [ -z "$CIRCLE_PULL_REQUEST" ]; then
              make push-<< parameters.target-version-variant >>
              make manifest-<< parameters.target-version-variant >>
              echo "...push and manifest done..."
            fi

      - run:
          name: Docker Ratelimit Check - after
          # https://docs.docker.com/docker-hub/download-rate-limit/
          command: |
            TOKEN=$(curl --user "$DOCKERHUB_USERNAME:$DOCKERHUB_ACCESS_TOKEN" "https://auth.docker.io/token?service=registry.docker.io&scope=repository:ratelimitpreview/test:pull" | jq -r .token)
            HEADERS=$(curl --head -H "Authorization: Bearer $TOKEN" https://registry-1.docker.io/v2/ratelimitpreview/test/manifests/latest)
            echo "Rate Limit Info:"
            echo "$HEADERS" | grep ratelimit


workflows:
  build-deploy:
#   AND triggered by the app.circleci.com UI
#   daily run : Repeats everyday every month ; 6:00am UTC, 1 (once per hour).
    jobs:
      - build-arm64:
          matrix:
            parameters:
              target-version-variant: [
#
# They are created using the ./apply-ci.sh script based on the version.json file,
#      where the architecture is defined as "arm64".
# These "--skip--" images serve as inputs for the "*-bundle" images,
#       hence they must be generated within the bundle JOB.
#
#circleci-targets-start
                "13-3.3-alpine3.21",
                "13-3.4-alpine3.21",
                "13-3.4-alpine3.22",
                "13-3.5-alpine3.21",
                "13-3.5-alpine3.22",
                "13-3.5-bullseye",
                "14-3.3-alpine3.21",
                "14-3.4-alpine3.21",
                "14-3.4-alpine3.22",
                "14-3.5-alpine3.21",
                "14-3.5-alpine3.22",
                "14-3.5-bullseye",
                "14-l3.1.9gcp-bookworm",
                "15-3.3-alpine3.21",
                "15-3.4-alpine3.21",
                "15-3.4-alpine3.22",
                "15-3.5-alpine3.21",
                "15-3.5-alpine3.22",
                "15-3.5-bullseye",
                "16-3.3-alpine3.21",
                "16-3.4-alpine3.21",
                "16-3.4-alpine3.22",
                "16-3.5-alpine3.21",
                "16-3.5-alpine3.22",
                "16-3.5-bullseye",
                "16-master-bookworm",
                "16-recent-bookworm",
                "17-3.4-alpine3.21",
                "17-3.4-alpine3.22",
                "17-3.5-alpine3.21",
                "17-3.5-alpine3.22",
                "17-3.5-bullseye",
                "17-3.6-alpine3.22",
                "17-master-bookworm",
                "17-recent-bookworm",
                "18-3.5-alpine3.22",
                "18-3.6-alpine3.22",
                "18-master-bookworm",
                "18-recent-bookworm",
#circleci-targets-end
              ]
